<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <import resource="classpath:appsApplicationContext.xml" />

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="authenticationProvider" />
    </security:authentication-manager>

    <!-- Open paths -->        
    <security:http pattern="/web/login" security="none"/>
    <security:http pattern="/web/mlogin" security="none"/>

    <!-- Protected paths -->
    <security:http pattern="/**" use-expressions="false" disable-url-rewriting="true" auto-config="false" entry-point-ref="authenticationProcessingFilterEntryPoint" servlet-api-provision="false">        
        <security:access-denied-handler error-page="/web/unauthorized"/>
        <security:csrf disabled="true"/>
        <security:headers defaults-disabled="true">
            <security:content-type-options />
        </security:headers>
        
        <!-- Open paths which require user object for locale and timezone-->
        <security:intercept-url pattern="/web/index" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/unauthorized" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/help/guide" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/home" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        
        <!-- Userview paths: permissions handled within the userview and forms -->
        <security:intercept-url pattern="/web/ulogin/**" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/embed/ulogin/**" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/userview/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/embed/userview/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/app/**/form/embed" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/app/**/datalist/embed" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/mlogin/**" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/mobile" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/mobile/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/mobilecache/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/mapp/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        
        <!-- Open JSON APIs: permissions controlled within assignment ownership, userview permission and process whitelist -->
        <security:intercept-url pattern="/web/json/app/**/form/options" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/directory/user/sso" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/directory/user/ssov2" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/workflow/currentUsername" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/workflow/process/start/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/workflow/assignment/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/apps/published/userviews" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/apps/published/processes" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>

        <!-- Javascript API paths: JS API invokes JSON API, so permissions controlled there  --> 
        <security:intercept-url pattern="/web/js/**"  access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>

        <security:intercept-url pattern="/web/css/**"  access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        
        <!-- RSS feed: permissions controlled by assignment -->
        <security:intercept-url pattern="/web/rss/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
                
        <!-- Task assignment and form download paths: permissions controlled by assignment  -->
        <security:intercept-url pattern="/web/client/app/**/form/download/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/client/app/**/**/form/download/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/client/app/assignment/**" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING" />
        <security:intercept-url pattern="/web/client/app/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
                
        <!-- Plugin web service paths: permissions controlled by plugin -->
        <security:intercept-url pattern="/web/json/plugin/**/service" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/app/**/plugin/**/service" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/json/plugin/list**" access="ROLE_ADMIN, ROLE_MANAGER"/>
        <security:intercept-url pattern="/plugin/**" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        
        <!-- Web Console normal user paths -->
        <security:intercept-url pattern="/web/console/run/inbox" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/console/run/processes" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/console/run/apps" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/console/profile" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/console/profile/submit" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING"/>
        <security:intercept-url pattern="/web/console/home" access="ROLE_ADMIN, ROLE_USER, ROLE_MANAGER, ROLE_MONITORING"/>

        <!-- Login, logout and app center -->
        <security:intercept-url pattern="/web/desktop" access="IS_AUTHENTICATED_ANONYMOUSLY"/>    
        <security:intercept-url pattern="/web/login" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS, ROLE_MANAGER, ROLE_MONITORING"/>
        
        <security:form-login login-page="/web/login" username-parameter="j_username" password-parameter="j_password" login-processing-url="/j_spring_security_check" default-target-url="/index.jsp" authentication-failure-url="/web/login?login_error=1" />
        <security:logout logout-url="/j_spring_security_logout" logout-success-url="/web/login" delete-cookies="JSESSIONID"/>
        <security:anonymous username="roleAnonymous"/>
        
        <!-- Web Console Monitoring -->
		<security:intercept-url pattern="/web/console/monitor/**" access="ROLE_ADMIN, ROLE_MONITORING"/>
		
		<!-- Web Console Monitoring -->
		<security:intercept-url pattern="/web/desktop/apps" access="ROLE_ADMIN, ROLE_MANAGER"/>
		<security:intercept-url pattern="/web/console/app/**" access="ROLE_ADMIN, ROLE_MANAGER"/>
        
        <!-- Secure by default -->
        <security:intercept-url pattern="/web/json/**" access="ROLE_ADMIN" />
        <security:intercept-url pattern="/web/console/**" access="ROLE_ADMIN"/>
        <security:intercept-url pattern="/web/**" access="ROLE_ADMIN"/>

        <!-- Concurrent session control, set max-sessions to allowed number of concurrent sessions  -->

        <security:session-management>
            <security:concurrency-control max-sessions="3" error-if-maximum-exceeded="true" expired-url="/web/login" />
        </security:session-management>
       
        
        <!-- Support Basic Authentication -->
        <security:http-basic />
        
        <security:custom-filter ref="workflowHttpAuthFilter" after="BASIC_AUTH_FILTER" /> 
        
    </security:http>
        
    <bean id="authenticationProvider" class="org.joget.apps.workflow.security.WorkflowAuthenticationProvider">
        <property name="directoryManager" ref="directoryManager"/>
    </bean>

    <bean id="workflowHttpAuthFilter" class="org.joget.apps.workflow.security.WorkflowHttpAuthProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="workflowUserManager" ref="workflowUserManager"/>
        <property name="directoryManager" ref="directoryManager"/>
        <property name="setupManager" ref="setupManager"/>
        <property name="localeResolver" ref="localeResolver"/>
        <property name="auditTrailManager" ref="auditTrailManager"/>
        <property name="allowSessionCreation" value="true" />
    </bean>
    
    <bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/web/login"/>
        <property name="forceHttps" value="false" />
    </bean>

	<!-- START OF PROPERTY -->
    <bean id="propertyDao" class="org.joget.apps.property.dao.PropertyDao">
        <property name="sessionFactory" ref="appSessionFactory"/>
    </bean>
    
    <bean id="propertiesLoader" class="org.joget.apps.property.DataSourcePropertiesLoader">
		<property name="locations">
		    <list>  
		      <value>classpath:config/quartz-setup.properties</value>
		    </list> 
		</property>
		<property name="propertyDao" ref="propertyDao" />
	</bean>
	
	<bean id="applicationProperties" class="org.joget.apps.property.PropertiesTemplate">
		<property name="propertiesLoader" ref="propertiesLoader" />
	</bean>
    <!-- END OF PROPERTY -->
    
    <import resource="classpath:camelApplicationContext.xml" />
    <import resource="classpath:webApplicationContext.xml" />
        
</beans>
